CREATE TABLE IF NOT EXISTS GENDEREXPRESSION (
    ID INTEGER,
    DESCRIPTION VARCHAR(75),

    CONSTRAINT PK_GENDEREXPRESSION__ID PRIMARY KEY (ID),
    CONSTRAINT UQ_GENDEREXPRESSION__DESCRIPTION UNIQUE (DESCRIPTION),
    CONSTRAINT NN_GENDEREXPRESSION__DESCRIPTION CHECK (DESCRIPTION IS NOT NULL)
);

CREATE SEQUENCE IF NOT EXISTS SQ_GENDEREXPRESSION__ID;

ALTER SEQUENCE SQ_GENDEREXPRESSION__ID RESTART WITH 1;

CREATE OR REPLACE FUNCTION BI_GENDEREXPRESSION__ID()
RETURNS TRIGGER AS
$$
BEGIN
  IF NEW.ID IS NULL THEN
    NEW.ID := NEXTVAL('SQ_GENDEREXPRESSION__ID');
  END IF;
  RETURN NEW;
END;
$$ LANGUAGE PLPGSQL;

CREATE OR REPLACE TRIGGER BI_GENDEREXPRESSION__ID
BEFORE INSERT ON GENDEREXPRESSION
FOR EACH ROW
EXECUTE FUNCTION BI_GENDEREXPRESSION__ID();

INSERT INTO GENDEREXPRESSION (DESCRIPTION) VALUES ('MASCULINA') ON CONFLICT (DESCRIPTION) DO NOTHING;
INSERT INTO GENDEREXPRESSION (DESCRIPTION) VALUES ('FEMININA') ON CONFLICT (DESCRIPTION) DO NOTHING;
INSERT INTO GENDEREXPRESSION (DESCRIPTION) VALUES ('ANDROGINA') ON CONFLICT (DESCRIPTION) DO NOTHING;
INSERT INTO GENDEREXPRESSION (DESCRIPTION) VALUES ('FLUIDA') ON CONFLICT (DESCRIPTION) DO NOTHING;
INSERT INTO GENDEREXPRESSION (DESCRIPTION) VALUES ('NAO BINARIA') ON CONFLICT (DESCRIPTION) DO NOTHING;
