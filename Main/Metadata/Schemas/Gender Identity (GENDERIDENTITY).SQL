CREATE TABLE IF NOT EXISTS GENDERIDENTITY (
    ID INTEGER,
    DESCRIPTION VARCHAR(75),

    CONSTRAINT PK_GENDERIDENTITY__ID PRIMARY KEY (ID),
    CONSTRAINT UQ_GENDERIDENTITY__DESCRIPTION UNIQUE (DESCRIPTION),
    CONSTRAINT NN_GENDERIDENTITY__DESCRIPTION CHECK (DESCRIPTION IS NOT NULL)
);

CREATE SEQUENCE IF NOT EXISTS SQ_GENDERIDENTITY__ID;

ALTER SEQUENCE SQ_GENDERIDENTITY__ID RESTART WITH 1;

CREATE OR REPLACE FUNCTION BI_GENDERIDENTITY__ID()
RETURNS TRIGGER AS
$$
BEGIN
  IF NEW.ID IS NULL THEN
    NEW.ID := NEXTVAL('SQ_GENDERIDENTITY__ID');
  END IF;
  RETURN NEW;
END;
$$ LANGUAGE PLPGSQL;

CREATE OR REPLACE TRIGGER BI_GENDERIDENTITY__ID
BEFORE INSERT ON GENDERIDENTITY
FOR EACH ROW
EXECUTE FUNCTION BI_GENDERIDENTITY__ID();

INSERT INTO GENDERIDENTITY (DESCRIPTION) VALUES ('CISGENERO') ON CONFLICT (DESCRIPTION) DO NOTHING;
INSERT INTO GENDERIDENTITY (DESCRIPTION) VALUES ('TRANSGENERO') ON CONFLICT (DESCRIPTION) DO NOTHING;
INSERT INTO GENDERIDENTITY (DESCRIPTION) VALUES ('INTERSEXUAL') ON CONFLICT (DESCRIPTION) DO NOTHING;
