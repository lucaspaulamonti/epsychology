CREATE TABLE IF NOT EXISTS USEFREQUENCY (
    ID INTEGER,
    DESCRIPTION VARCHAR(75),

    CONSTRAINT PK_USEFREQUENCY__ID PRIMARY KEY (ID),
    CONSTRAINT UQ_USEFREQUENCY__DESCRIPTION UNIQUE (DESCRIPTION),
    CONSTRAINT NN_USEFREQUENCY__DESCRIPTION CHECK (DESCRIPTION IS NOT NULL)
);

CREATE SEQUENCE IF NOT EXISTS SQ_USEFREQUENCY__ID;

ALTER SEQUENCE SQ_USEFREQUENCY__ID RESTART WITH 1;

CREATE OR REPLACE FUNCTION BI_USEFREQUENCY__ID()
RETURNS TRIGGER AS
$$
BEGIN
  IF NEW.ID IS NULL THEN
    NEW.ID := NEXTVAL('SQ_USEFREQUENCY__ID');
  END IF;
  RETURN NEW;
END;
$$ LANGUAGE PLPGSQL;

CREATE OR REPLACE TRIGGER BI_USEFREQUENCY__ID
BEFORE INSERT ON USEFREQUENCY
FOR EACH ROW
EXECUTE FUNCTION BI_USEFREQUENCY__ID();

INSERT INTO USEFREQUENCY (DESCRIPTION) VALUES ('NUNCA') ON CONFLICT (DESCRIPTION) DO NOTHING;
INSERT INTO USEFREQUENCY (DESCRIPTION) VALUES ('UMA VEZ') ON CONFLICT (DESCRIPTION) DO NOTHING;
INSERT INTO USEFREQUENCY (DESCRIPTION) VALUES ('RARAMENTE') ON CONFLICT (DESCRIPTION) DO NOTHING;
INSERT INTO USEFREQUENCY (DESCRIPTION) VALUES ('FREQUENTEMENTE E PRETENDO PARAR') ON CONFLICT (DESCRIPTION) DO NOTHING;
INSERT INTO USEFREQUENCY (DESCRIPTION) VALUES ('FREQUENTEMENTE E NAO PRETENDO PARAR') ON CONFLICT (DESCRIPTION) DO NOTHING;
