CREATE TABLE IF NOT EXISTS ACADEMICDEGREE (
    ID INTEGER,
    DESCRIPTION VARCHAR(75),

    CONSTRAINT PK_ACADEMICDEGREE__ID PRIMARY KEY (ID),
    CONSTRAINT UQ_ACADEMICDEGREE__DESCRIPTION UNIQUE (DESCRIPTION),
    CONSTRAINT NN_ACADEMICDEGREE__DESCRIPTION CHECK (DESCRIPTION IS NOT NULL)
);

CREATE SEQUENCE IF NOT EXISTS SQ_ACADEMICDEGREE__ID;

ALTER SEQUENCE SQ_ACADEMICDEGREE__ID RESTART WITH 1;

CREATE OR REPLACE FUNCTION BI_ACADEMICDEGREE__ID()
RETURNS TRIGGER AS
$$
BEGIN
  IF NEW.ID IS NULL THEN
    NEW.ID := NEXTVAL('SQ_ACADEMICDEGREE__ID');
  END IF;
  RETURN NEW;
END;
$$ LANGUAGE PLPGSQL;

CREATE OR REPLACE TRIGGER BI_ACADEMICDEGREE__ID
BEFORE INSERT ON ACADEMICDEGREE
FOR EACH ROW
EXECUTE FUNCTION BI_ACADEMICDEGREE__ID();

INSERT INTO ACADEMICDEGREE (DESCRIPTION) VALUES ('ANALFABETO') ON CONFLICT (DESCRIPTION) DO NOTHING;
INSERT INTO ACADEMICDEGREE (DESCRIPTION) VALUES ('FUNDAMENTAL INCOMPLETO') ON CONFLICT (DESCRIPTION) DO NOTHING;
INSERT INTO ACADEMICDEGREE (DESCRIPTION) VALUES ('FUNDAMENTAL COMPLETO') ON CONFLICT (DESCRIPTION) DO NOTHING;
INSERT INTO ACADEMICDEGREE (DESCRIPTION) VALUES ('MEDIO INCOMPLETO') ON CONFLICT (DESCRIPTION) DO NOTHING;
INSERT INTO ACADEMICDEGREE (DESCRIPTION) VALUES ('MEDIO COMPLETO') ON CONFLICT (DESCRIPTION) DO NOTHING;
INSERT INTO ACADEMICDEGREE (DESCRIPTION) VALUES ('SUPERIOR INCOMPLETO') ON CONFLICT (DESCRIPTION) DO NOTHING;
INSERT INTO ACADEMICDEGREE (DESCRIPTION) VALUES ('SUPERIOR COMPLETO') ON CONFLICT (DESCRIPTION) DO NOTHING;
INSERT INTO ACADEMICDEGREE (DESCRIPTION) VALUES ('POS-GRADUADO') ON CONFLICT (DESCRIPTION) DO NOTHING;
