CREATE TABLE IF NOT EXISTS CITYGEOGRAPHIC (
	ID INTEGER,
	ID_STATE INTEGER,
	DESCRIPTION VARCHAR(75),

	CONSTRAINT PK_CITYGEOGRAPHIC__ID PRIMARY KEY (ID),
	CONSTRAINT FK_CITYGEOGRAPHIC_STATE__ID_STATE FOREIGN KEY (ID_STATE) REFERENCES STATEGEOGRAPHIC (ID),
	CONSTRAINT NN_CITYGEOGRAPHIC__ID_STATE CHECK (ID_STATE IS NOT NULL),
	CONSTRAINT NN_CITYGEOGRAPHIC__DESCRIPTION CHECK (DESCRIPTION IS NOT NULL)
);

CREATE SEQUENCE IF NOT EXISTS SQ_CITYGEOGRAPHIC__ID;

ALTER SEQUENCE SQ_CITYGEOGRAPHIC__ID RESTART WITH 1;

CREATE OR REPLACE FUNCTION BI_CITYGEOGRAPHIC__ID()
RETURNS TRIGGER AS
$$
BEGIN
  IF NEW.ID IS NULL THEN
    NEW.ID := NEXTVAL('SQ_CITYGEOGRAPHIC__ID');
  END IF;
  RETURN NEW;
END;
$$ LANGUAGE PLPGSQL;

CREATE OR REPLACE TRIGGER BI_CITYGEOGRAPHIC__ID
BEFORE INSERT ON CITYGEOGRAPHIC
FOR EACH ROW
EXECUTE FUNCTION BI_CITYGEOGRAPHIC__ID();

INSERT INTO CITYGEOGRAPHIC (DESCRIPTION, ID_STATE) VALUES ('ACARATUBA', 24);
INSERT INTO CITYGEOGRAPHIC (DESCRIPTION, ID_STATE) VALUES ('BIRIGUI', 24);
INSERT INTO CITYGEOGRAPHIC (DESCRIPTION, ID_STATE) VALUES ('GUARARAPES', 24);
