CREATE TABLE IF NOT EXISTS BIOLOGICALSEX (
    ID INTEGER,
    DESCRIPTION VARCHAR(75),

    CONSTRAINT PK_BIOLOGICALSEX__ID PRIMARY KEY (ID),
    CONSTRAINT UQ_BIOLOGICALSEX__DESCRIPTION UNIQUE (DESCRIPTION),
    CONSTRAINT NN_BIOLOGICALSEX__DESCRIPTION CHECK (DESCRIPTION IS NOT NULL)
);

CREATE SEQUENCE IF NOT EXISTS SQ_BIOLOGICALSEX__ID;

ALTER SEQUENCE SQ_BIOLOGICALSEX__ID RESTART WITH 1;

CREATE OR REPLACE FUNCTION BI_BIOLOGICALSEX__ID()
RETURNS TRIGGER AS
$$
BEGIN
  IF NEW.ID IS NULL THEN
    NEW.ID := NEXTVAL('SQ_BIOLOGICALSEX__ID');
  END IF;
  RETURN NEW;
END;
$$ LANGUAGE PLPGSQL;

CREATE OR REPLACE TRIGGER BI_BIOLOGICALSEX__ID
BEFORE INSERT ON BIOLOGICALSEX
FOR EACH ROW
EXECUTE FUNCTION BI_BIOLOGICALSEX__ID();

INSERT INTO BIOLOGICALSEX (DESCRIPTION) VALUES ('MASCULINO') 
ON CONFLICT (DESCRIPTION) DO NOTHING;
INSERT INTO BIOLOGICALSEX (DESCRIPTION) VALUES ('FEMININO') 
ON CONFLICT (DESCRIPTION) DO NOTHING;
INSERT INTO BIOLOGICALSEX (DESCRIPTION) VALUES ('INTERSEXO') 
ON CONFLICT (DESCRIPTION) DO NOTHING;
