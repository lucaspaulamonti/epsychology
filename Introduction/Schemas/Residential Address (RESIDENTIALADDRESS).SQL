CREATE TABLE IF NOT EXISTS RESIDENTIALADDRESS (
 ID INTEGER,
 ID_CUSTOMER INTEGER,
 ADDRESS VARCHAR(100),
 NUMBER CHAR(5),
 COMPLEMENT VARCHAR(65),
 NEIGHBORHOOD VARCHAR(65),
 CEP VARCHAR(25),
 ID_CITY INTEGER,
 DDD CHAR(2),
 PHONE VARCHAR(10),
 MAIL VARCHAR(65),
 OBSERVATION VARCHAR(255),

 CONSTRAINT PK_RESIDENTIALADDRESS__ID PRIMARY KEY (ID),
 CONSTRAINT UQ_RESIDENTIALADDRESS__ID_CUSTOMER UNIQUE (ID_CUSTOMER),
 CONSTRAINT NN_RESIDENTIALADDRESS__ID_CUSTOMER CHECK (ID_CUSTOMER IS NOT NULL),
 CONSTRAINT FK_RESIDENTIALADDRESS_CUSTOMER__ID FOREIGN KEY (ID_CUSTOMER) REFERENCES CUSTOMER(ID),
 CONSTRAINT FK_RESIDENTIALADDRESS_CITYGEOGRAPHIC__ID FOREIGN KEY (ID_CITY) REFERENCES CITYGEOGRAPHIC(ID)
);

CREATE SEQUENCE IF NOT EXISTS SQ_RESIDENTIALADDRESS__ID;

ALTER SEQUENCE SQ_RESIDENTIALADDRESS__ID RESTART WITH 1;

CREATE OR REPLACE FUNCTION BI_RESIDENTIALADDRESS__ID()
RETURNS TRIGGER AS
$$
BEGIN
  IF NEW.ID IS NULL THEN
    NEW.ID := NEXTVAL('SQ_RESIDENTIALADDRESS__ID');
  END IF;
  RETURN NEW;
END;
$$ LANGUAGE PLPGSQL;

CREATE OR REPLACE TRIGGER BI_RESIDENTIALADDRESS__ID
BEFORE INSERT ON RESIDENTIALADDRESS
FOR EACH ROW
EXECUTE FUNCTION BI_RESIDENTIALADDRESS__ID();
