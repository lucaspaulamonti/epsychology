CREATE TABLE IF NOT EXISTS MARITALSTATUS (
    ID INTEGER,
    DESCRIPTION VARCHAR(75),

    CONSTRAINT PK_MARITALSTATUS__ID PRIMARY KEY (ID),
    CONSTRAINT UQ_MARITALSTATUS__DESCRIPTION UNIQUE (DESCRIPTION),
    CONSTRAINT NN_MARITALSTATUS__DESCRIPTION CHECK (DESCRIPTION IS NOT NULL)
);

CREATE SEQUENCE IF NOT EXISTS SQ_MARITALSTATUS__ID;

ALTER SEQUENCE SQ_MARITALSTATUS__ID RESTART WITH 1;

CREATE OR REPLACE FUNCTION BI_MARITALSTATUS__ID()
RETURNS TRIGGER AS
$$
BEGIN
  IF NEW.ID IS NULL THEN
    NEW.ID := NEXTVAL('SQ_MARITALSTATUS__ID');
  END IF;
  RETURN NEW;
END;
$$ LANGUAGE PLPGSQL;

CREATE OR REPLACE TRIGGER BI_MARITALSTATUS__ID
BEFORE INSERT ON MARITALSTATUS
FOR EACH ROW
EXECUTE FUNCTION BI_MARITALSTATUS__ID();

INSERT INTO MARITALSTATUS (DESCRIPTION) VALUES ('SOLTEIRO')
ON CONFLICT (DESCRIPTION) DO NOTHING;
INSERT INTO MARITALSTATUS (DESCRIPTION) VALUES ('CASADO')
ON CONFLICT (DESCRIPTION) DO NOTHING;
INSERT INTO MARITALSTATUS (DESCRIPTION) VALUES ('SEPARADO')
ON CONFLICT (DESCRIPTION) DO NOTHING;
INSERT INTO MARITALSTATUS (DESCRIPTION) VALUES ('DIVORCIADO')
ON CONFLICT (DESCRIPTION) DO NOTHING;
INSERT INTO MARITALSTATUS (DESCRIPTION) VALUES ('VIUVO')
ON CONFLICT (DESCRIPTION) DO NOTHING;
