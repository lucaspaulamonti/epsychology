CREATE TABLE IF NOT EXISTS REGISTRATIONSTATUS (
    ID INTEGER,
    DESCRIPTION VARCHAR(75),

    CONSTRAINT PK_REGISTRATIONSTATUS__ID PRIMARY KEY (ID),
    CONSTRAINT UQ_REGISTRATIONSTATUS__DESCRIPTION UNIQUE (DESCRIPTION),
    CONSTRAINT NN_REGISTRATIONSTATUS__DESCRIPTION CHECK (DESCRIPTION IS NOT NULL)
);

CREATE SEQUENCE IF NOT EXISTS SQ_REGISTRATIONSTATUS__ID;

ALTER SEQUENCE SQ_REGISTRATIONSTATUS__ID RESTART WITH 1;

CREATE OR REPLACE FUNCTION BI_REGISTRATIONSTATUS__ID()
RETURNS TRIGGER AS
$$
BEGIN
  IF NEW.ID IS NULL THEN
    NEW.ID := NEXTVAL('SQ_REGISTRATIONSTATUS__ID');
  END IF;
  RETURN NEW;
END;
$$ LANGUAGE PLPGSQL;

CREATE OR REPLACE TRIGGER BI_REGISTRATIONSTATUS__ID
BEFORE INSERT ON REGISTRATIONSTATUS
FOR EACH ROW
EXECUTE FUNCTION BI_REGISTRATIONSTATUS__ID();

INSERT INTO REGISTRATIONSTATUS (DESCRIPTION) VALUES ('ATIVO')
ON CONFLICT (DESCRIPTION) DO NOTHING;
INSERT INTO REGISTRATIONSTATUS (DESCRIPTION) VALUES ('INATIVO')
ON CONFLICT (DESCRIPTION) DO NOTHING;
INSERT INTO REGISTRATIONSTATUS (DESCRIPTION) VALUES ('PENDENCIA FINANCEIRA')
ON CONFLICT (DESCRIPTION) DO NOTHING;
INSERT INTO REGISTRATIONSTATUS (DESCRIPTION) VALUES ('PENDENCIA ADMINISTRATIVA')
ON CONFLICT (DESCRIPTION) DO NOTHING;
