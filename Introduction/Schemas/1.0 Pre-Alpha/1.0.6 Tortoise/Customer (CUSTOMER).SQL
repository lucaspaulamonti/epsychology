CREATE TABLE IF NOT EXISTS CUSTOMER (
	ID INTEGER,
	
	NAMEBIOLOGICAL VARCHAR(150),
	NAMESOCIAL VARCHAR(150),

	ID_BIOLOGICALSEX INTEGER,
	ID_SEXUALORIENTATION INTEGER,
	ID_GENDERIDENTITY INTEGER,
	ID_GENDEREXPRESSION INTEGER,

	BIRTHDATE DATE,

	RG VARCHAR(25),
	CPF VARCHAR(25),

	ID_ETHNICGROUP INTEGER,
	ID_MARITALSTATUS INTEGER,
	ID_RELIGIOUSAFFILIATION INTEGER,
	ID_JOBOCCUPATION INTEGER,
	ID_ACADEMICDEGREE INTEGER,
	ID_MONTHLYINCOME INTEGER,
	ID_MEDICALINSURANCE INTEGER,
	ID_BLOODTYPE INTEGER,
	ID_DISABILITYPERSON INTEGER,
	ID_DISEASECLASSIFICATION INTEGER,

	ID_REGISTRATIONSTATUS INTEGER,

	OBSERVATION VARCHAR(255),

	CONSTRAINT PK_CUSTOMER__ID PRIMARY KEY (ID),
	CONSTRAINT NN_CUSTOMER__NAMEBIOLOGICAL CHECK (NAMEBIOLOGICAL IS NOT NULL),
	CONSTRAINT FK_CUSTOMER_BIOLOGICALSEX__ID FOREIGN KEY (ID_BIOLOGICALSEX) REFERENCES BIOLOGICALSEX(ID),
	CONSTRAINT FK_CUSTOMER_SEXUALORIENTATION__ID FOREIGN KEY (ID_SEXUALORIENTATION) REFERENCES SEXUALORIENTATION(ID),
	CONSTRAINT FK_CUSTOMER_GENDERIDENTITY__ID FOREIGN KEY (ID_GENDERIDENTITY) REFERENCES GENDERIDENTITY(ID),
	CONSTRAINT FK_CUSTOMER_GENDEREXPRESSION__ID FOREIGN KEY (ID_GENDEREXPRESSION) REFERENCES GENDEREXPRESSION(ID),
	CONSTRAINT FK_CUSTOMER_ETHNICGROUP__ID FOREIGN KEY (ID_ETHNICGROUP) REFERENCES ETHNICGROUP(ID),
	CONSTRAINT FK_CUSTOMER_MARITALSTATUS__ID FOREIGN KEY (ID_MARITALSTATUS) REFERENCES MARITALSTATUS(ID),
	CONSTRAINT FK_CUSTOMER_RELIGICOUSAFFILIATION__ID FOREIGN KEY (ID_RELIGIOUSAFFILIATION) REFERENCES RELIGIOUSAFFILIATION(ID),
	CONSTRAINT FK_CUSTOMER_JOBOCCUPATION__ID FOREIGN KEY (ID_JOBOCCUPATION) REFERENCES JOBOCCUPATION(ID),
	CONSTRAINT FK_CUSTOMER_ACADEMICDEGREE__ID FOREIGN KEY (ID_ACADEMICDEGREE) REFERENCES ACADEMICDEGREE(ID),
	CONSTRAINT FK_CUSTOMER_MONTHLYINCOME__ID FOREIGN KEY (ID_MONTHLYINCOME) REFERENCES MONTHLYINCOME(ID),
	CONSTRAINT FK_CUSTOMER_MEDICALINSURANCE__ID FOREIGN KEY (ID_MEDICALINSURANCE) REFERENCES MEDICALINSURANCE(ID),
	CONSTRAINT FK_CUSTOMER_BLOODTYPE__ID FOREIGN KEY (ID_BLOODTYPE) REFERENCES BLOODTYPE(ID),
	CONSTRAINT FK_CUSTOMER_DISABILITYPERSON__ID FOREIGN KEY (ID_DISABILITYPERSON) REFERENCES DISABILITYPERSON(ID),
	CONSTRAINT FK_CUSTOMER_DISEASECLASSIFICATION__ID FOREIGN KEY (ID_DISEASECLASSIFICATION) REFERENCES DISEASECLASSIFICATION(ID),
	CONSTRAINT FK_CUSTOMER_REGISTRATIONSTATUS__ID FOREIGN KEY (ID_REGISTRATIONSTATUS) REFERENCES REGISTRATIONSTATUS(ID)
);

CREATE SEQUENCE IF NOT EXISTS SQ_CUSTOMER__ID;

ALTER SEQUENCE SQ_CUSTOMER__ID RESTART WITH 1;

CREATE OR REPLACE FUNCTION BI_CUSTOMER__ID()
RETURNS TRIGGER AS
$$
BEGIN
  IF NEW.ID IS NULL THEN
    NEW.ID := NEXTVAL('SQ_CUSTOMER__ID');
  END IF;
  RETURN NEW;
END;
$$ LANGUAGE PLPGSQL;

CREATE OR REPLACE TRIGGER BI_CUSTOMER__ID
BEFORE INSERT ON CUSTOMER
FOR EACH ROW
EXECUTE FUNCTION BI_CUSTOMER__ID();
