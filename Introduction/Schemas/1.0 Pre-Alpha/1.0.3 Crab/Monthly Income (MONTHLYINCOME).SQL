CREATE TABLE IF NOT EXISTS MONTHLYINCOME (
    ID INTEGER,
    DESCRIPTION VARCHAR(75),

    CONSTRAINT PK_MONTHLYINCOME__ID PRIMARY KEY (ID),
    CONSTRAINT UQ_MONTHLYINCOME__DESCRIPTION UNIQUE (DESCRIPTION),
    CONSTRAINT NN_MONTHLYINCOME__DESCRIPTION CHECK (DESCRIPTION IS NOT NULL)
);

CREATE SEQUENCE IF NOT EXISTS SQ_MONTHLYINCOME__ID;

ALTER SEQUENCE SQ_MONTHLYINCOME__ID RESTART WITH 1;

CREATE OR REPLACE FUNCTION BI_MONTHLYINCOME__ID()
RETURNS TRIGGER AS
$$
BEGIN
  IF NEW.ID IS NULL THEN
    NEW.ID := NEXTVAL('SQ_MONTHLYINCOME__ID');
  END IF;
  RETURN NEW;
END;
$$ LANGUAGE PLPGSQL;

CREATE OR REPLACE TRIGGER BI_MONTHLYINCOME__ID
BEFORE INSERT ON MONTHLYINCOME
FOR EACH ROW
EXECUTE FUNCTION BI_MONTHLYINCOME__ID();

INSERT INTO MONTHLYINCOME (DESCRIPTION) VALUES ('ATE 1 SALARIO MINIMO (BAIXA RENDA)') ON CONFLICT (DESCRIPTION) DO NOTHING;
INSERT INTO MONTHLYINCOME (DESCRIPTION) VALUES ('DE 1 A 2 SALARIOS MINIMOS (MEDIA-BAIXA RENDA)') ON CONFLICT (DESCRIPTION) DO NOTHING;
INSERT INTO MONTHLYINCOME (DESCRIPTION) VALUES ('DE 2 A 5 SALARIOS MINIMOS (MEDIA RENDA)') ON CONFLICT (DESCRIPTION) DO NOTHING;
INSERT INTO MONTHLYINCOME (DESCRIPTION) VALUES ('DE 5 A 10 SALARIOS MINIMOS (MEDIA-ALTA RENDA)') ON CONFLICT (DESCRIPTION) DO NOTHING;
INSERT INTO MONTHLYINCOME (DESCRIPTION) VALUES ('ACIMA DE 10 SALARIOS MINIMOS (ALTA RENDA)') ON CONFLICT (DESCRIPTION) DO NOTHING;
