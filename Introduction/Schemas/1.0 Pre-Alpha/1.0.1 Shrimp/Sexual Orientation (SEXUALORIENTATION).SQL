CREATE TABLE IF NOT EXISTS SEXUALORIENTATION (
    ID INTEGER,
    DESCRIPTION VARCHAR(75),

    CONSTRAINT PK_SEXUALORIENTATION__ID PRIMARY KEY (ID),
    CONSTRAINT UQ_SEXUALORIENTATION__DESCRIPTION UNIQUE (DESCRIPTION),
    CONSTRAINT NN_SEXUALORIENTATION__DESCRIPTION CHECK (DESCRIPTION IS NOT NULL)
);

CREATE SEQUENCE IF NOT EXISTS SQ_SEXUALORIENTATION__ID;

ALTER SEQUENCE SQ_SEXUALORIENTATION__ID RESTART WITH 1;

CREATE OR REPLACE FUNCTION BI_SEXUALORIENTATION__ID()
RETURNS TRIGGER AS
$$
BEGIN
  IF NEW.ID IS NULL THEN
    NEW.ID := NEXTVAL('SQ_SEXUALORIENTATION__ID');
  END IF;
  RETURN NEW;
END;
$$ LANGUAGE PLPGSQL;

CREATE OR REPLACE TRIGGER BI_SEXUALORIENTATION__ID
BEFORE INSERT ON SEXUALORIENTATION
FOR EACH ROW
EXECUTE FUNCTION BI_SEXUALORIENTATION__ID();

INSERT INTO SEXUALORIENTATION (DESCRIPTION) VALUES ('HETEROSSEXUAL') ON CONFLICT (DESCRIPTION) DO NOTHING;
INSERT INTO SEXUALORIENTATION (DESCRIPTION) VALUES ('HOMOSSEXUAL') ON CONFLICT (DESCRIPTION) DO NOTHING;
INSERT INTO SEXUALORIENTATION (DESCRIPTION) VALUES ('BISSEXUAL') ON CONFLICT (DESCRIPTION) DO NOTHING;
INSERT INTO SEXUALORIENTATION (DESCRIPTION) VALUES ('ASSEXUAL') ON CONFLICT (DESCRIPTION) DO NOTHING;
INSERT INTO SEXUALORIENTATION (DESCRIPTION) VALUES ('PANSEXUAL') ON CONFLICT (DESCRIPTION) DO NOTHING;
