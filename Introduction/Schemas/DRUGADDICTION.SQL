CREATE TABLE IF NOT EXISTS DRUGADDICTION (
    ID INTEGER,
    ID_CUSTOMER INTEGER,
    ALCOHOL INTEGER,
    TOBACCO INTEGER,
    MARIHUANA INTEGER,
    ECSTASY INTEGER,
    LSD INTEGER,
    COCAINE INTEGER,
    CRACK INTEGER,
    HEROIN INTEGER,
    OPIUM INTEGER,
    AMPHETAMINE INTEGER,
    OBSERVATION VARCHAR(255),
	
	CONSTRAINT PK_DRUGADDICTION__ID PRIMARY KEY (ID),
	CONSTRAINT UQ_DRUGADDICTION__ID_CUSTOMER UNIQUE (ID_CUSTOMER),
	CONSTRAINT NN_DRUGADDICTION__ID_CUSTOMER CHECK (ID_CUSTOMER IS NOT NULL),
	CONSTRAINT FK_DRUGADDICTION_CUSTOMER__ID FOREIGN KEY (ID_CUSTOMER) REFERENCES CUSTOMER(ID),

	CONSTRAINT FK_DRUGADDICTION_USEFREQUENCY__ALCOHOL FOREIGN KEY (ALCOHOL) REFERENCES USEFREQUENCY(ID),
	CONSTRAINT FK_DRUGADDICTION_USEFREQUENCY__TOBACCO FOREIGN KEY (TOBACCO) REFERENCES USEFREQUENCY(ID),
	CONSTRAINT FK_DRUGADDICTION_USEFREQUENCY__MARIHUANA FOREIGN KEY (MARIHUANA) REFERENCES USEFREQUENCY(ID),
	CONSTRAINT FK_DRUGADDICTION_USEFREQUENCY__ECSTASY FOREIGN KEY (ECSTASY) REFERENCES USEFREQUENCY(ID),
	CONSTRAINT FK_DRUGADDICTION_USEFREQUENCY__LSD FOREIGN KEY (LSD) REFERENCES USEFREQUENCY(ID),
	CONSTRAINT FK_DRUGADDICTION_USEFREQUENCY__COCAINE FOREIGN KEY (COCAINE) REFERENCES USEFREQUENCY(ID),
	CONSTRAINT FK_DRUGADDICTION_USEFREQUENCY__CRACK FOREIGN KEY (CRACK) REFERENCES USEFREQUENCY(ID),
	CONSTRAINT FK_DRUGADDICTION_USEFREQUENCY__HEROIN FOREIGN KEY (HEROIN) REFERENCES USEFREQUENCY(ID),
	CONSTRAINT FK_DRUGADDICTION_USEFREQUENCY__OPIUM FOREIGN KEY (OPIUM) REFERENCES USEFREQUENCY(ID),
	CONSTRAINT FK_DRUGADDICTION_USEFREQUENCY__AMPHETAMINE FOREIGN KEY (AMPHETAMINE) REFERENCES USEFREQUENCY(ID)
);

CREATE SEQUENCE IF NOT EXISTS SQ_DRUGADDICTION__ID;

ALTER SEQUENCE SQ_DRUGADDICTION__ID RESTART WITH 1;

CREATE OR REPLACE FUNCTION BI_DRUGADDICTION__ID()
RETURNS TRIGGER AS
$$
BEGIN
  IF NEW.ID IS NULL THEN
    NEW.ID := NEXTVAL('SQ_DRUGADDICTION__ID');
  END IF;
  RETURN NEW;
END;
$$ LANGUAGE PLPGSQL;

CREATE OR REPLACE TRIGGER BI_DRUGADDICTION__ID
BEFORE INSERT ON DRUGADDICTION
FOR EACH ROW
EXECUTE FUNCTION BI_DRUGADDICTION__ID();
